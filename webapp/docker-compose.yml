version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: deimos-app-api
    volumes:
      - ./api:/app
    environment:
      - DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/hello_flask_dev
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - FLASK_APP=api.py
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=TRUE
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db


  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    image: deimos-app-client
    volumes:
      - .:/app
    ports:
      - "80:80"
    depends_on:
      - db


  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=hello_flask_dev


  worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery --app api.celery worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./api:/app
    environment:
      - FLASK_DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/hello_flask_dev
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - FLASK_APP=api.py
      - PYTHONUNBUFFERED=TRUE
    depends_on:
      - api
      - redis

  redis:
    image: redis:6-alpine

volumes:
  postgres_data: